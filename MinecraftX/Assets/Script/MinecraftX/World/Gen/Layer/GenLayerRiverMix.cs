using UnityEngine;
using System.Collections;

public class GenLayerRiverMix : GenLayer {
  
	private GenLayer biomePatternGeneratorChain;
	private GenLayer riverPatternGeneratorChain;

	public GenLayerRiverMix(long seed, GenLayer p_i2129_3_, GenLayer p_i2129_4_) : base(seed)
	{
		biomePatternGeneratorChain = p_i2129_3_;
		riverPatternGeneratorChain = p_i2129_4_;
	}

	/**
     * Initialize layer's local worldGenSeed based on its own baseSeed and the world's global seed (passed in as an
     * argument).
     */
	public void initWorldGenSeed(long seed)
	{
		biomePatternGeneratorChain.initWorldGenSeed (seed);
		riverPatternGeneratorChain.initWorldGenSeed (seed);
	}

	/**
     * Returns a list of integer values generated by this layer. These may be interpreted as temperatures, rainfall
     * amounts, or biomeList[] indices based on the particular GenLayer subclass.
     */
	public override int[] getInts(int areaX, int areaY, int areaWidth, int areaHeight)
	{
		int[] aint = this.biomePatternGeneratorChain.getInts(areaX, areaY, areaWidth, areaHeight);
		int[] aint1 = this.riverPatternGeneratorChain.getInts(areaX, areaY, areaWidth, areaHeight);
		int[] aint2 = IntCache.getIntCache(areaWidth * areaHeight);

		for (int i = 0; i < areaWidth * areaHeight; ++i)
		{
			if (aint[i] != BiomeGenBase.ocean.biomeID && aint[i] != BiomeGenBase.deepOcean.biomeID)
			{
				if (aint1[i] == BiomeGenBase.river.biomeID)
				{
					if (aint[i] == BiomeGenBase.icePlains.biomeID)
					{
						aint2[i] = BiomeGenBase.frozenRiver.biomeID;
					}
					else if (aint[i] != BiomeGenBase.mushroomIsland.biomeID && aint[i] != BiomeGenBase.mushroomIslandShore.biomeID)
					{
						aint2[i] = aint1[i] & 255;
					}
					else
					{
						aint2[i] = BiomeGenBase.mushroomIslandShore.biomeID;
					}
				}
				else
				{
					aint2[i] = aint[i];
				}
			}
			else
			{
				aint2[i] = aint[i];
			}
		}

		return aint2;
	}
}
